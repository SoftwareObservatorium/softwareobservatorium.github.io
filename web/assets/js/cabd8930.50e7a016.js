"use strict";(self.webpackChunklasso=self.webpackChunklasso||[]).push([[461],{8288:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>n,metadata:()=>c,toc:()=>l});var t=r(4848),a=r(8453);const n={sidebar_position:5},o="Analyze and index software artifacts",c={id:"advanced/analyzer",title:"Analyze and index software artifacts",description:"Why? We aim to analyze (code analytics) and index the previously downloaded artifact(s) to enable code searches.",source:"@site/docs/advanced/analyzer.md",sourceDirName:"advanced",slug:"/advanced/analyzer",permalink:"/web/docs/advanced/analyzer",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/advanced/analyzer.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Crawl software artifacts",permalink:"/web/docs/advanced/crawler"},next:{title:"Known Issues",permalink:"/web/docs/advanced/known_issues"}},d={},l=[];function i(e){const s={a:"a",code:"code",em:"em",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"analyze-and-index-software-artifacts",children:"Analyze and index software artifacts"}),"\n",(0,t.jsx)(s.p,{children:"Why? We aim to analyze (code analytics) and index the previously downloaded artifact(s) to enable code searches."}),"\n",(0,t.jsxs)(s.p,{children:["This uses functionality provided by the ",(0,t.jsx)(s.a,{href:"/web/docs/development/analyzer",children:"analyzer"})," module."]}),"\n",(0,t.jsxs)(s.p,{children:["The following command first conducts static code analysis and then populates the results in the Solr index ",(0,t.jsx)(s.code,{children:"lasso_quickstart"})," to enable code search"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"# set your path to LASSO's repository\nexport LASSO_REPO=/my/path/lasso/repository\n# run analyzer (points to directory of crawler above)\njava -Xms2g -Xmx2g \\\n    -Dindexer.work.path=lasso_crawler/ \\\n    -Dlasso.indexer.worker.threads=4 \\\n    -Dbatch.job.writer.threads=-1 \\\n    -Dbatch.job.commit.interval=1 \\\n    -Dbatch.solr.url=http://localhost:8983/solr \\\n    -Dbatch.solr.core.candidates=lasso_quickstart \\\n    -jar $LASSO_REPO/analyzer/target/analyzer-1.0.0-SNAPSHOT-exec.jar\n"})}),"\n",(0,t.jsx)(s.p,{children:"where"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"indexer.work.path=lasso_crawler/"})," points to your crawler working directory"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"lasso.indexer.worker.threads"})," sets the number of worker threads for generating Solr documents"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"batch.job.writer.threads sets"})," the number of writer threads for Solr"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"batch.job.commit.interval sets"})," the commit interval for committing Solr documents (batching)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"batch.solr.url=http://localhost:8983/solr"})," sets the Solr url"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"batch.solr.core.candidates=lasso_quickstart"})," sets the Solr core (i.e., code search index)"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Now, you can now open your web browser and go to ",(0,t.jsx)(s.a,{href:"http://localhost:8983/solr/#/lasso_quickstart/query",children:"http://localhost:8983/solr/#/lasso_quickstart/query"})," to see the results."]}),"\n",(0,t.jsxs)(s.p,{children:["When you hit ",(0,t.jsx)(s.em,{children:"Execute Query"}),", hundreds of documents should appear that describe the code that has been indexed. There are two types of documents present: class- and method documents."]}),"\n",(0,t.jsxs)(s.p,{children:["You can try simple keyword queries with Solr's query syntax such as the query (i.e., q) ",(0,t.jsx)(s.code,{children:'name_fq:"Base64"'})," to retrieve all classes similar to ",(0,t.jsx)(s.code,{children:"Base64"}),". You can add a filter query (i.e., fq), by only returning all method (documents) of the classes found (i.e., ",(0,t.jsx)(s.code,{children:'doctype_s:"method"'}),"),"]}),"\n",(0,t.jsxs)(s.p,{children:["See ",(0,t.jsx)(s.a,{href:"https://solr.apache.org/guide/solr/latest/query-guide/query-syntax-and-parsers.html",children:"https://solr.apache.org/guide/solr/latest/query-guide/query-syntax-and-parsers.html"})," for Solr's query syntax."]})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>o,x:()=>c});var t=r(6540);const a={},n=t.createContext(a);function o(e){const s=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(n.Provider,{value:s},e.children)}}}]);