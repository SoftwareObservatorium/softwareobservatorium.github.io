"use strict";(self.webpackChunklasso=self.webpackChunklasso||[]).push([[6042],{1621:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var o=t(4848),i=t(8453);const s={},r="Actions",c={id:"platform/actions_api",title:"Actions",description:"In the following we present a developer-oriented documentation for actions.",source:"@site/docs/platform/actions_api.md",sourceDirName:"platform",slug:"/platform/actions_api",permalink:"/web/docs/platform/actions_api",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/platform/actions_api.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Platform",permalink:"/web/docs/category/platform"},next:{title:"Infrastructure",permalink:"/web/docs/category/infrastructure"}},a={},l=[{value:"Action API",id:"action-api",level:2},{value:"Java Action Class Structure",id:"java-action-class-structure",level:3},{value:"Key Concepts",id:"key-concepts",level:3},{value:"Using Java Actions in LSL Pipeline Scripts",id:"using-java-actions-in-lsl-pipeline-scripts",level:2},{value:"Docker Images for Actions",id:"docker-images-for-actions",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"actions",children:"Actions"}),"\n",(0,o.jsx)(n.p,{children:"In the following we present a developer-oriented documentation for actions."}),"\n",(0,o.jsx)(n.h2,{id:"action-api",children:"Action API"}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.p,{children:"The workflow engine of the LASSO platform is based on the principle of Inversion of Control (IoC), as known from popular frameworks like Spring."}),"\n",(0,o.jsx)(n.h3,{id:"java-action-class-structure",children:"Java Action Class Structure"}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.p,{children:["A Java Action class must inherit from a certain subclass from the Action API, such as ",(0,o.jsx)(n.code,{children:"DefaultAction"}),". The general structure of a Java Action class is:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@LassoAction(desc = "An action with no behaviour")\npublic class MyAction extends DefaultAction {\n    @LassoInput(desc = "a configuration parameter", optional = true)\n    public String paramExample;\n    \n    @Override\n    public void execute(LSLExecutionContext ctx, ActionConfiguration conf) throws IOException {\n        // abstraction container (SM)\n        Abstraction abstraction = conf.getAbstraction();\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"key-concepts",children:"Key Concepts"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Inheritance"}),": Java Actions must inherit from a subclass of the ",(0,o.jsx)(n.code,{children:"DefaultAction"})," class."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Lifecycle Methods"}),": The workflow engine uses well-defined lifecycle methods, which are inherited by the Action class implementation."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Annotations"}),": The Action class implementation is further described to the workflow engine using annotation classes like ",(0,o.jsx)(n.code,{children:"@LassoInput"}),", ",(0,o.jsx)(n.code,{children:"@LassoAction"}),", and others."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"using-java-actions-in-lsl-pipeline-scripts",children:"Using Java Actions in LSL Pipeline Scripts"}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.p,{children:"Once a Java Action class is known to the workflow engine, it can be used as part of an LSL pipeline script execution. The syntax for this is:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-groovy",children:"action(name:'noOp',type:'MyAction') {\n    paramExample = 'hello world'\n    dependsOn '...'\n    include '...'\n    analyze() { ... }\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"docker-images-for-actions",children:"Docker Images for Actions"}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.p,{children:"LASSO Actions may require additional tools or techniques to be present. A common approach to integrate external tools/techniques is to use Docker images."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["For more information on using Docker with LASSO, see ",(0,o.jsx)(n.a,{href:"/web/docs/infrastructure/docker",children:"docker.md"}),"."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var o=t(6540);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);